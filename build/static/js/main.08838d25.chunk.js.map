{"version":3,"sources":["header.js","counter.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Counter","props","state","currentPings","this","fetch","then","res","json","data","console","log","setState","catch","timerID","setInterval","updateCounter","clearInterval","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAUeA,MAVf,WACE,OACE,qBAAKC,UAAU,mBAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,qBAAKA,UAAU,WAAf,2DCgCOC,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,aAAc,GAFd,E,qDAKnB,OACE,4BAAYJ,UAAU,yBAAtB,SACE,oBAAGA,UAAU,OAAb,4BAAoCK,KAAKF,MAAMC,oB,sCAKpC,IAAD,OACdE,MAAM,SAASC,MAAK,SAACC,GACnBA,EACGC,OACAF,MAAK,SAACG,GACLC,QAAQC,IAAI,WAAYF,GACxB,EAAKG,SAAS,CAAET,aAAcM,EAAI,WAEnCI,MAAMH,QAAQC,U,0CAIA,IAAD,OAClBP,KAAKU,QAAUC,aAAY,kBAAM,EAAKC,kBAAiB,O,6CAIrDC,cAAcb,KAAKU,a,GA9BHI,aC2BPC,E,uKAxBX,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,S,0CAKe,IAAD,OAClBT,QAAQC,IAAI,mBACZN,MAAM,SACHC,MAAK,SAACC,GACLA,EAAIC,OACDF,MAAK,SAACG,GACLC,QAAQC,IAAI,WAAYF,GACxB,EAAKG,SAAS,CAAET,aAAcM,IAC9BC,QAAQC,IAAIF,MAEbI,MAAMH,QAAQC,Y,GApBPO,aCSHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08838d25.chunk.js","sourcesContent":["function Header() {\n  return (\n    <div className=\".container-fluid\">\n      <header className=\"jumbotron\">\n        <div className=\"display2\">ICMP echo messages recieved on this host</div>\n      </header>\n    </div>\n  );\n}\n\nexport default Header","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { currentPings: 0 };\n    }\n  render() {\n    return (\n      <blockquote className=\"blockquote text-center\">\n        <p className=\"lead\">Current Count: {this.state.currentPings}</p>\n      </blockquote>\n    );\n  }\n\n  updateCounter() {\n    fetch(\"/data\").then((res) => {\n      res\n        .json()\n        .then((data) => {\n          console.log(\"data is \", data);\n          this.setState({ currentPings: data['count'] });\n        })\n        .catch(console.log);\n    });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.updateCounter(), 1000);\n  }\n\n    componentWillUnmount() {\n      clearInterval(this.timerID)\n  }\n}\n\nexport default Counter;\n\n//class App extends Component {\n\n//   state = {\n//     contacts: []\n//   }\n//   ...\n// }\n","import React, {Component} from 'react'\nimport Header from './header'\nimport Counter from './counter'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header></Header>\n        <Counter></Counter>\n      </div>\n    );\n  }\n  \n  componentDidMount() {\n    console.log(\"Executing Mount\");\n    fetch(\"/data\")\n      .then((res) => {\n        res.json()\n          .then((data) => {\n            console.log(\"data is \", data)\n            this.setState({ currentPings: data });\n            console.log(data);\n          })\n          .catch(console.log);\n      },\n      )\n  }\n}\n\nexport default App;\n\n//class App extends Component {\n\n//   state = {\n//     contacts: []\n//   }\n//   ...\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}